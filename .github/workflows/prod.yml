name: Prod
on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Generate release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{secrets.GITHUB_TOKEN}}"
          prerelease: false
          automatic_release_tag: latest
          files: LICENSE

  unit-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/frontend
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: Run unit tests
        run: |
          npm i
          npm run test

  create-config:
    environment: prod
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{secrets.AWS_REGION}}
      RIOT_KEY: ${{secrets.RIOT_KEY}}
      DISCORD_PUBLIC_KEY: ${{secrets.DISCORD_PUBLIC_KEY}}
      APPLICATION_ID: ${{secrets.APPLICATION_ID}}
      TOKEN: ${{secrets.TOKEN}}
    steps:
      - name: Create config.json
        run: |
          echo "{ \"aws_region\": \"$AWS_REGION\", \"riot_key\": \"$RIOT_KEY\", \"discord_public_key\": \"$DISCORD_PUBLIC_KEY\", \"application_id\": \"$APPLICATION_ID\", \"token\": \"$TOKEN\" }" > config.json
      - name: Upload config.json
        uses: actions/upload-artifact@v4
        with:
          name: config
          path: config.json

  deploy:
    concurrency:
      group: deploy
    needs:
      - unit-tests
      - create-config
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: Download config.json
        uses: actions/download-artifact@v4
        with:
          name: config
          path: configs
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/ZoeBotActions
          role-duration-seconds: 900
          aws-region: ${{secrets.AWS_REGION}}
      - name: Deploy prod app
        run: |
          npm i
          npm run deploy:prod
