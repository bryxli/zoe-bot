name: Dev
on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  automated-tests:
    concurrency:
      group: test
    environment: dev
    runs-on: ubuntu-latest
    env:
      SET_AWS_REGION: ${{secrets.AWS_REGION}}
      RIOT_KEY: ${{secrets.RIOT_KEY}}
      DISCORD_PUBLIC_KEY: ${{secrets.DISCORD_PUBLIC_KEY}}
      APPLICATION_ID: ${{secrets.APPLICATION_ID}}
      TOKEN: ${{secrets.TOKEN}}
    defaults:
      run:
        working-directory: ./packages/functions
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v5
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/ZoeBotApplication
          role-duration-seconds: 900
          aws-region: ${{secrets.AWS_REGION}}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Install function dependencies
        run: |
          pip install -r src/main/requirements.txt
          pip install -r src/register/requirements.txt
          pip install -r src/task/requirements.txt
          pip install -r src/layers/dynamo/requirements.txt
          pip install -r src/layers/league/requirements.txt
          pip install -r requirements.txt
      - name: Run unit tests
        run: |
          coverage run -m unittest
          coverage report --show-missing
      - name: Run acceptance tests
        run: behave

      - name: Install frontend dependencies
        run: npm ci
        working-directory: ./packages/frontend
      - name: Run unit tests
        run: npm run test
        working-directory: ./packages/frontend
      - name: Run acceptance tests
        run: echo # TODO: run frontend acceptance test
        working-directory: ./packages/frontend

  # deploy:
  #   concurrency:
  #     group: deploy
  #   needs: automated-tests
  #   environment: dev
  #   runs-on: ubuntu-latest
  #   env:
  #     AWS_REGION: ${{secrets.AWS_REGION}}
  #     RIOT_KEY: ${{secrets.RIOT_KEY}}
  #     DISCORD_PUBLIC_KEY: ${{secrets.DISCORD_PUBLIC_KEY}}
  #     APPLICATION_ID: ${{secrets.APPLICATION_ID}}
  #     TOKEN: ${{secrets.TOKEN}}
  #     API_KEY: ${{secrets.API_KEY}}
  #   steps:
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         role-to-assume: arn:aws:iam::${{secrets.AWS_ACCOUNT_ID}}:role/ZoeBotActions
  #         role-duration-seconds: 3600
  #         aws-region: ${{secrets.AWS_REGION}}

  #     - name: Git clone the repository
  #       uses: actions/checkout@v5
  #     - name: Create config.json
  #       run: |
  #         echo "{ \"aws_region\": \"$AWS_REGION\", \"riot_key\": \"$RIOT_KEY\", \"api_key\": \"$API_KEY\", \"discord_public_key\": \"$DISCORD_PUBLIC_KEY\", \"application_id\": \"$APPLICATION_ID\", \"token\": \"$TOKEN\" }" > configs/config.json
  #     - name: Deploy dev app
  #       run: |
  #         npm ci
  #         npm run deploy

  # approve:
  #   needs: deploy
  #   runs-on: ubuntu-latest
  #   env:
  #     PR_URL: ${{github.event.pull_request.html_url}}
  #     GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  #   steps:
  #     - name: Approve PR
  #       run: gh pr review --approve "$PR_URL"

  # merge:
  #   needs: approve
  #   runs-on: ubuntu-latest
  #   if: github.actor == 'dependabot[bot]'
  #   env:
  #     PR_URL: ${{github.event.pull_request.html_url}}
  #     GH_TOKEN: ${{secrets.PAT}}
  #   steps:
  #     - name: Merge PR
  #       run: gh pr merge --auto --merge --delete-branch "$PR_URL"
